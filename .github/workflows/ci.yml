name: CI

on:
  pull_request:
    branches:
      - "**"
  workflow_call: # Needed to make this a reusable workflow for releasing artifacts https://docs.github.com/en/actions/using-workflows/reusing-workflows
  workflow_dispatch: # To allow starting the workflow manually in the web ui

permissions:
  contents: read

jobs:
  CI:
    strategy:
      matrix:
        image: [ubuntu-24.04, ubuntu-24.04-arm]
    runs-on:
      - ${{matrix.image}}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@446798f8213ac2e75931c1b0769676d927801858 # v2.10.3
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      # Prepare build dependencies
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@2080da66123fcc7ec821c7597e9bc40af40d8af6 # 1.73.0
        with:
          components: rustfmt, clippy
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 16.16.0
      - name: Apt update
        run: sudo apt update
      - name: Install gcc
        run: sudo apt install -y build-essential
      - name: Install musl
        run: sudo apt install -y musl-tools

      # Tests and static analysis
      - name: Set perf_event_paranoid to 0
        run: echo 0 | sudo tee /proc/sys/kernel/perf_event_paranoid
      - name: Run tests
        run: cargo test --verbose -- --nocapture --color always
      - name: Run clippy
        run: cargo clippy --all-targets --all-features
      - name: Run rustfmt
        run: cargo fmt --all -- --check

      # Build and upload release artifacts
      - name: Build release artifacts
        run: |
          rustup target add $(arch)-unknown-linux-musl
          cargo build --release --target $(arch)-unknown-linux-musl
      - name: Archive release artifacts
        run: tar -zcvf artifacts.tar.gz -C target/$(arch)-unknown-linux-musl/release aperf
      - name: Upload x86_64 release artifacts
        uses: actions/upload-artifact@v4
        if: ${{ matrix.image == 'ubuntu-24.04' }}
        with:
          name: x86_64-release-artifacts
          path: artifacts.tar.gz
      - name: Upload aarch64 release artifacts
        uses: actions/upload-artifact@v4
        if: ${{ matrix.image == 'ubuntu-24.04-arm' }}
        with:
          name: aarch64-release-artifacts
          path: artifacts.tar.gz
